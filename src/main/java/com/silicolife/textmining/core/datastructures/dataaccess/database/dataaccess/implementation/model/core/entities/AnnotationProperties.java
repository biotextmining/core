package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * AnnotationProperties generated by hbm2java
 */
@Entity
@Table(name = "annotation_properties")
public class AnnotationProperties implements java.io.Serializable {

	private AnnotationPropertiesId id;
	private Annotations annotations;
	private String anpPropValue;

	public AnnotationProperties() {
	}

	public AnnotationProperties(AnnotationPropertiesId id, Annotations annotations, String anpPropValue) {
		this.id = id;
		this.annotations = annotations;
		this.anpPropValue = anpPropValue;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "anpPropKey", column = @Column(name = "anp_prop_key", nullable = false)),
			@AttributeOverride(name = "anpId", column = @Column(name = "anp_id", nullable = false)) })
	public AnnotationPropertiesId getId() {
		return this.id;
	}

	public void setId(AnnotationPropertiesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "anp_id", nullable = false, insertable = false, updatable = false)
	public Annotations getAnnotations() {
		return this.annotations;
	}

	public void setAnnotations(Annotations annotations) {
		this.annotations = annotations;
	}

	@Column(name = "anp_prop_value", nullable = false)
	public String getAnpPropValue() {
		return this.anpPropValue;
	}

	public void setAnpPropValue(String anpPropValue) {
		this.anpPropValue = anpPropValue;
	}

}
