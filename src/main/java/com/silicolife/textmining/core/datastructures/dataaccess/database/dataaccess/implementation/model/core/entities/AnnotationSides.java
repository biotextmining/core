package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * AnnotationSides generated by hbm2java
 */
@Entity
@Table(name = "annotation_sides")
public class AnnotationSides implements java.io.Serializable {

	private AnnotationSidesId id;
	private Annotations annotationsByAsAnnotationId;
	private Annotations annotationsByAsAnnotationSubId;
	private String asAnnotSideType;

	public AnnotationSides() {
	}

	public AnnotationSides(AnnotationSidesId id, Annotations annotationsByAsAnnotationId, Annotations annotationsByAsAnnotationSubId, String asAnnotSideType) {
		this.id = id;
		this.annotationsByAsAnnotationId = annotationsByAsAnnotationId;
		this.annotationsByAsAnnotationSubId = annotationsByAsAnnotationSubId;
		this.asAnnotSideType = asAnnotSideType;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "asAnnotationId", column = @Column(name = "as_annotation_id", nullable = false)),
			@AttributeOverride(name = "asAnnotationSubId", column = @Column(name = "as_annotation_sub_id", nullable = false)) })
	public AnnotationSidesId getId() {
		return this.id;
	}

	public void setId(AnnotationSidesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "as_annotation_id", nullable = false, insertable = false, updatable = false)
	public Annotations getAnnotationsByAsAnnotationId() {
		return this.annotationsByAsAnnotationId;
	}

	public void setAnnotationsByAsAnnotationId(Annotations annotationsByAsAnnotationId) {
		this.annotationsByAsAnnotationId = annotationsByAsAnnotationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "as_annotation_sub_id", nullable = false, insertable = false, updatable = false)
	public Annotations getAnnotationsByAsAnnotationSubId() {
		return this.annotationsByAsAnnotationSubId;
	}

	public void setAnnotationsByAsAnnotationSubId(Annotations annotationsByAsAnnotationSubId) {
		this.annotationsByAsAnnotationSubId = annotationsByAsAnnotationSubId;
	}

	@Column(name = "as_annot_side_type", nullable = false, length = 5)
	public String getAsAnnotSideType() {
		return this.asAnnotSideType;
	}

	public void setAsAnnotSideType(String asAnnotSideType) {
		this.asAnnotSideType = asAnnotSideType;
	}

}
