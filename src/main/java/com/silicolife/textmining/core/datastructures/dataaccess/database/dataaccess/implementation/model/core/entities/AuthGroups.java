package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.silicolife.textmining.core.interfaces.core.user.IGroup;

/**
 * AuthGroups generated by hbm2java
 */
@Entity
@Table(name = "auth_groups", uniqueConstraints = @UniqueConstraint(columnNames = "ag_description"))
public class AuthGroups implements java.io.Serializable, IGroup {

	private Long agId;
	private String agDescription;
	private Set<AuthUsers> authUserses = new HashSet<AuthUsers>(0);
	@JsonBackReference
	private Set<AuthGroupHasRoles> authGroupHasRoleses = new HashSet<AuthGroupHasRoles>(0);

	public AuthGroups() {
	}

	public AuthGroups(String agDescription) {
		this.agDescription = agDescription;
	}

	public AuthGroups(String agDescription, Set<AuthUsers> authUserses, Set<AuthGroupHasRoles> authGroupHasRoleses) {
		this.agDescription = agDescription;
		this.authUserses = authUserses;
		this.authGroupHasRoleses = authGroupHasRoleses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ag_id", unique = true, nullable = false)
	@Override
	public Long getAgId() {
		return this.agId;
	}

	public void setAgId(Long agId) {
		this.agId = agId;
	}

	@Column(name = "ag_description", unique = true, nullable = false)
	@Override
	public String getAgDescription() {
		return this.agDescription;
	}

	public void setAgDescription(String agDescription) {
		this.agDescription = agDescription;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authGroups")
	public Set<AuthUsers> getAuthUserses() {
		return this.authUserses;
	}

	public void setAuthUserses(Set<AuthUsers> authUserses) {
		this.authUserses = authUserses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authGroups")
	public Set<AuthGroupHasRoles> getAuthGroupHasRoleses() {
		return this.authGroupHasRoleses;
	}

	public void setAuthGroupHasRoleses(Set<AuthGroupHasRoles> authGroupHasRoleses) {
		this.authGroupHasRoleses = authGroupHasRoleses;
	}

	@Override
	public String toString() {
		return agDescription;
	}
}
