package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.silicolife.textmining.core.interfaces.core.user.IUser;

/**
 * AuthUsers generated by hbm2java
 */
@Entity
@Table(name = "auth_users", uniqueConstraints = { @UniqueConstraint(columnNames = "au_username"), @UniqueConstraint(columnNames = "au_email") })
public class AuthUsers implements java.io.Serializable, IUser {

	private long auId;
	private AuthGroups authGroups;
	private String auUsername;
	private String auPassword;
	private String auFullname;
	private String auEmail;
	private Integer auPhone;
	private String auAddress;
	private String auZipCode;
	private String auLocation;
	private String auPreferLanguage;
	private byte[] auAvatar;
	private boolean auActive;
	private Set<AnnotationLogs> annotationLogses = new HashSet<AnnotationLogs>(0);
	private Set<AuthUserSettings> authUserSettingses = new HashSet<AuthUserSettings>(0);
	private Set<AuthUserDataObjects> authUserDataObjectses = new HashSet<AuthUserDataObjects>(0);
	private Set<AuthUserLogs> authUserLogses = new HashSet<AuthUserLogs>(0);

	public AuthUsers() {
	}

	public AuthUsers(long auId, AuthGroups authGroups, String auUsername, String auPassword, String auFullname, String auEmail,String preferLanguage,byte[] auAvatar) {
		this.auId = auId;
		this.authGroups = authGroups;
		this.auUsername = auUsername;
		this.auPassword = auPassword;
		this.auFullname = auFullname;
		this.auEmail = auEmail;
		this.auPreferLanguage=preferLanguage;
		this.auAvatar=auAvatar;
		this.auActive=true;
	}

	public AuthUsers(long auId, AuthGroups authGroups, String auUsername, String auPassword, String auFullname, String auEmail, Integer auPhone, String auAddress,
			String auZipCode, String auLocation,String preferLanguage,byte[] auAvatar,boolean auActive,Set<AnnotationLogs> annotationLogses, Set<AuthUserSettings> authUserSettingses, Set<AuthUserDataObjects> authUserDataObjectses,
			Set<AuthUserLogs> authUserLogses) {
		this.auId = auId;
		this.authGroups = authGroups;
		this.auUsername = auUsername;
		this.auPassword = auPassword;
		this.auFullname = auFullname;
		this.auEmail = auEmail;
		this.auPhone = auPhone;
		this.auAddress = auAddress;
		this.auZipCode = auZipCode;
		this.auLocation = auLocation;
		this.auPreferLanguage=preferLanguage;
		this.auAvatar=auAvatar;
		this.auActive=auActive;
		this.annotationLogses = annotationLogses;
		this.authUserSettingses = authUserSettingses;
		this.authUserDataObjectses = authUserDataObjectses;
		this.authUserLogses = authUserLogses;
	}

	@Id
	@Column(name = "au_id", unique = true, nullable = false)
	@Override
	public long getAuId() {
		return this.auId;
	}

	public void setAuId(long auId) {
		this.auId = auId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "au_group_id", nullable = false)
	@Override
	public AuthGroups getAuthGroups() {
		return this.authGroups;
	}

	public void setAuthGroups(AuthGroups authGroups) {
		this.authGroups = authGroups;
	}

	@Column(name = "au_username", unique = true, nullable = false)
	@Override
	public String getAuUsername() {
		return this.auUsername;
	}

	public void setAuUsername(String auUsername) {
		this.auUsername = auUsername;
	}

	@Column(name = "au_password", nullable = false)
	@Override
	public String getAuPassword() {
		return this.auPassword;
	}

	public void setAuPassword(String auPassword) {
		this.auPassword = auPassword;
	}

	@Column(name = "au_fullname", nullable = false)
	@Override
	public String getAuFullname() {
		return this.auFullname;
	}

	public void setAuFullname(String auFullname) {
		this.auFullname = auFullname;
	}

	@Column(name = "au_email", unique = true, nullable = false)
	@Override
	public String getAuEmail() {
		return this.auEmail;
	}

	public void setAuEmail(String auEmail) {
		this.auEmail = auEmail;
	}

	@Column(name = "au_phone")
	@Override
	public Integer getAuPhone() {
		return this.auPhone;
	}

	public void setAuPhone(Integer auPhone) {
		this.auPhone = auPhone;
	}

	@Column(name = "au_address")
	@Override
	public String getAuAddress() {
		return this.auAddress;
	}

	public void setAuAddress(String auAddress) {
		this.auAddress = auAddress;
	}

	@Column(name = "au_zip_code", length = 16)
	@Override
	public String getAuZipCode() {
		return this.auZipCode;
	}

	public void setAuZipCode(String auZipCode) {
		this.auZipCode = auZipCode;
	}

	@Column(name = "au_location")
	@Override
	public String getAuLocation() {
		return this.auLocation;
	}

	public void setAuLocation(String auLocation) {
		this.auLocation = auLocation;
	}
	
	@Column(name = "au_prefer_language")
	public String getAuPreferLanguage() {
		return auPreferLanguage;
	}

	public void setAuPreferLanguage(String auPreferLanguage) {
		this.auPreferLanguage = auPreferLanguage;
	}

	@Column(name = "au_avatar")
	public byte[] getAuAvatar() {
		return auAvatar;
	}

	public void setAuAvatar(byte[] auAvatar) {
		this.auAvatar = auAvatar;
	}

	@Column(name = "au_active")
	public boolean isAuActive() {
		return auActive;
	}

	public void setAuActive(boolean auActive) {
		this.auActive = auActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authUsers")
	public Set<AnnotationLogs> getAnnotationLogses() {
		return this.annotationLogses;
	}

	public void setAnnotationLogses(Set<AnnotationLogs> annotationLogses) {
		this.annotationLogses = annotationLogses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authUsers")
	public Set<AuthUserSettings> getAuthUserSettingses() {
		return this.authUserSettingses;
	}

	public void setAuthUserSettingses(Set<AuthUserSettings> authUserSettingses) {
		this.authUserSettingses = authUserSettingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authUsers")
	public Set<AuthUserDataObjects> getAuthUserDataObjectses() {
		return this.authUserDataObjectses;
	}

	public void setAuthUserDataObjectses(Set<AuthUserDataObjects> authUserDataObjectses) {
		this.authUserDataObjectses = authUserDataObjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authUsers")
	public Set<AuthUserLogs> getAuthUserLogses() {
		return this.authUserLogses;
	}

	public void setAuthUserLogses(Set<AuthUserLogs> authUserLogses) {
		this.authUserLogses = authUserLogses;
	}



}