package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Fields;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Store;

/**
 * Corpus generated by hbm2java
 */
@Entity
@Indexed
@Table(name = "corpus")
public class Corpus implements java.io.Serializable {

	private long crpId;
	private String crpCorpusName;
	private boolean crpActive;
	private String crpNotes;
	private Set<AnnotationLogs> annotationLogses = new HashSet<AnnotationLogs>(0);
	private Set<CorpusProperties> corpusPropertieses = new HashSet<CorpusProperties>(0);
	private Set<CorpusHasPublications> corpusHasPublicationses = new HashSet<CorpusHasPublications>(0);
	private Set<CorpusHasProcesses> corpusHasProcesseses = new HashSet<CorpusHasProcesses>(0);
	private Set<Annotations> annotationses = new HashSet<Annotations>(0);

	public Corpus() {
	}

	public Corpus(long crpId, String crpCorpusName, boolean crpActive) {
		this.crpId = crpId;
		this.crpCorpusName = crpCorpusName;
		this.crpActive = crpActive;
	}

	public Corpus(long crpId, String crpCorpusName, boolean crpActive, String crpNotes, Set<AnnotationLogs> annotationLogses, Set<CorpusProperties> corpusPropertieses,
			Set<CorpusHasPublications> corpusHasPublicationses, Set<CorpusHasProcesses> corpusHasProcesseses, Set<Annotations> annotationses) {
		this.crpId = crpId;
		this.crpCorpusName = crpCorpusName;
		this.crpActive = crpActive;
		this.crpNotes = crpNotes;
		this.annotationLogses = annotationLogses;
		this.corpusPropertieses = corpusPropertieses;
		this.corpusHasPublicationses = corpusHasPublicationses;
		this.corpusHasProcesseses = corpusHasProcesseses;
		this.annotationses = annotationses;
	}

	@Id
	@Column(name = "crp_id", unique = true, nullable = false)
	public long getCrpId() {
		return this.crpId;
	}

	public void setCrpId(long crpId) {
		this.crpId = crpId;
	}

	@Fields(value = { 
			@Field(name="crp_nameCS",index=Index.YES, analyze=Analyze.YES, analyzer = @Analyzer(definition="KeywordsSplitter"), store=Store.NO),
			@Field(name="crp_nameNCS",index=Index.YES, analyze=Analyze.YES,analyzer = @Analyzer(definition="toLowerCase"), store=Store.NO)
	})
	@Column(name = "crp_corpus_name", nullable = false, length = 500)
	public String getCrpCorpusName() {
		return this.crpCorpusName;
	}

	public void setCrpCorpusName(String crpCorpusName) {
		this.crpCorpusName = crpCorpusName;
	}
	
	@Field
	@Column(name = "crp_active", nullable = false)
	public boolean isCrpActive() {
		return this.crpActive;
	}
	
	
	public void setCrpActive(boolean crpActive) {
		this.crpActive = crpActive;
	}

	@Column(name = "crp_notes", length = 65535)
	public String getCrpNotes() {
		return this.crpNotes;
	}

	public void setCrpNotes(String crpNotes) {
		this.crpNotes = crpNotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "corpus")
	public Set<AnnotationLogs> getAnnotationLogses() {
		return this.annotationLogses;
	}

	public void setAnnotationLogses(Set<AnnotationLogs> annotationLogses) {
		this.annotationLogses = annotationLogses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "corpus")
	public Set<CorpusProperties> getCorpusPropertieses() {
		return this.corpusPropertieses;
	}

	public void setCorpusPropertieses(Set<CorpusProperties> corpusPropertieses) {
		this.corpusPropertieses = corpusPropertieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "corpus")
	public Set<CorpusHasPublications> getCorpusHasPublicationses() {
		return this.corpusHasPublicationses;
	}

	public void setCorpusHasPublicationses(Set<CorpusHasPublications> corpusHasPublicationses) {
		this.corpusHasPublicationses = corpusHasPublicationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "corpus")
	public Set<CorpusHasProcesses> getCorpusHasProcesseses() {
		return this.corpusHasProcesseses;
	}

	public void setCorpusHasProcesseses(Set<CorpusHasProcesses> corpusHasProcesseses) {
		this.corpusHasProcesseses = corpusHasProcesseses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "corpus")
	public Set<Annotations> getAnnotationses() {
		return this.annotationses;
	}

	public void setAnnotationses(Set<Annotations> annotationses) {
		this.annotationses = annotationses;
	}

}
