package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Fields;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.SortableField;
import org.hibernate.search.annotations.Store;

/**
 * ProcessOrigins generated by hbm2java
 */
@Entity
@Indexed
@Table(name = "process_origins", uniqueConstraints = @UniqueConstraint(columnNames = "po_description"))
public class ProcessOrigins implements java.io.Serializable {

	private long poId;
	private String poDescription;
	private Set<Processes> processeses = new HashSet<Processes>(0);

	public ProcessOrigins() {
	}

	public ProcessOrigins(long poId, String poDescription) {
		this.poId = poId;
		this.poDescription = poDescription;
	}

	public ProcessOrigins(long poId, String poDescription, Set<Processes> processeses) {
		this.poId = poId;
		this.poDescription = poDescription;
		this.processeses = processeses;
	}

	@Id
	@Column(name = "po_id", unique = true, nullable = false)
	public long getPoId() {
		return this.poId;
	}

	public void setPoId(long poId) {
		this.poId = poId;
	}

	@Fields(value = { 
			@Field(name="pro_po_descriptionCS",index=Index.YES, analyze=Analyze.YES, analyzer = @Analyzer(definition="KeywordsSplitter"), store=Store.NO),
			@Field(name="pro_po_descriptionNCS",index=Index.YES, analyze=Analyze.YES,analyzer = @Analyzer(definition="toLowerCase"), store=Store.NO),
			@Field(name = "pro_po_descriptionSort", analyze = Analyze.NO, store = Store.YES)	
	})
	@SortableField(forField = "pro_po_descriptionSort")
	@Column(name = "po_description", unique = true, nullable = false)
	public String getPoDescription() {
		return this.poDescription;
	}

	public void setPoDescription(String poDescription) {
		this.poDescription = poDescription;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processOrigins")
	public Set<Processes> getProcesseses() {
		return this.processeses;
	}

	public void setProcesseses(Set<Processes> processeses) {
		this.processeses = processeses;
	}

}
