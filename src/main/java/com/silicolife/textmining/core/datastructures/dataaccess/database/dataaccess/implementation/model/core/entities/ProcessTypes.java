package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Fields;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.SortableField;
import org.hibernate.search.annotations.Store;

/**
 * ProcessTypes generated by hbm2java
 */
@Entity
@Table(name = "process_types", uniqueConstraints = @UniqueConstraint(columnNames = "pt_process_type"))
public class ProcessTypes implements java.io.Serializable {

	private long ptId;
	private String ptProcessType;
	private Set<Processes> processeses = new HashSet<Processes>(0);

	public ProcessTypes() {
	}

	public ProcessTypes(long ptId, String ptProcessType) {
		this.ptId = ptId;
		this.ptProcessType = ptProcessType;
	}

	public ProcessTypes(long ptId, String ptProcessType, Set<Processes> processeses) {
		this.ptId = ptId;
		this.ptProcessType = ptProcessType;
		this.processeses = processeses;
	}

	@Id
	@Column(name = "pt_id", unique = true, nullable = false)
	public long getPtId() {
		return this.ptId;
	}

	public void setPtId(long ptId) {
		this.ptId = ptId;
	}

	@Fields(value = { 
			@Field(name="pro_pt_typeCS",index=Index.YES, analyze=Analyze.YES, analyzer = @Analyzer(definition="KeywordsSplitter"), store=Store.NO),
			@Field(name="pro_pt_typeNCS",index=Index.YES, analyze=Analyze.YES,analyzer = @Analyzer(definition="toLowerCase"), store=Store.NO),
			@Field(name = "pro_pt_typeSort", analyze = Analyze.NO, store = Store.YES)	
	})
	@SortableField(forField = "pro_pt_typeSort")
	@Column(name = "pt_process_type", unique = true, nullable = false)
	public String getPtProcessType() {
		return this.ptProcessType;
	}

	public void setPtProcessType(String ptProcessType) {
		this.ptProcessType = ptProcessType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processTypes")
	public Set<Processes> getProcesseses() {
		return this.processeses;
	}

	public void setProcesseses(Set<Processes> processeses) {
		this.processeses = processeses;
	}

}
