package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.ContainedIn;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Store;

import com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.lucene.bridges.ResourceElementExtenalIdsIdBridge;

/**
 * ResourceElementExtenalIds generated by hbm2java
 */
@Entity
@Table(name = "resource_element_extenal_ids")
public class ResourceElementExtenalIds implements java.io.Serializable {

	private ResourceElementExtenalIdsId id;
	private ResourceElements resourceElements;
	private Sources sources;
	private boolean releActive;

	public ResourceElementExtenalIds() {
	}

	public ResourceElementExtenalIds(ResourceElementExtenalIdsId id, ResourceElements resourceElements, Sources sources, boolean releActive) {
		this.id = id;
		this.resourceElements = resourceElements;
		this.sources = sources;
		this.releActive = releActive;
	}

	@EmbeddedId
	@DocumentId
	@FieldBridge(impl = ResourceElementExtenalIdsIdBridge.class)
	@IndexedEmbedded
	@AttributeOverrides({ @AttributeOverride(name = "releResourceElementId", column = @Column(name = "rele_resource_element_id", nullable = false)),
			@AttributeOverride(name = "releSourceId", column = @Column(name = "rele_source_id", nullable = false)),
			@AttributeOverride(name = "releExternalId", column = @Column(name = "rele_external_id", nullable = false, length = 200)) })
	public ResourceElementExtenalIdsId getId() {
		return this.id;
	}

	public void setId(ResourceElementExtenalIdsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@ContainedIn
	@JoinColumn(name = "rele_resource_element_id", nullable = false, insertable = false, updatable = false)
	public ResourceElements getResourceElements() {
		return this.resourceElements;
	}

	public void setResourceElements(ResourceElements resourceElements) {
		this.resourceElements = resourceElements;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rele_source_id", nullable = false, insertable = false, updatable = false)
	public Sources getSources() {
		return this.sources;
	}

	public void setSources(Sources sources) {
		this.sources = sources;
	}

	@Field(index=Index.YES, analyze=Analyze.NO, store=Store.NO)
	@Column(name = "rele_active", nullable = false)
	public boolean isReleActive() {
		return this.releActive;
	}

	public void setReleActive(boolean releActive) {
		this.releActive = releActive;
	}

}
