package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Fields;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Store;

/**
 * Resources generated by hbm2java
 */
@Entity
@Indexed
@Table(name = "resources")
public class Resources implements java.io.Serializable {

	private long resoId;
	private ResourceTypes resourceTypes;
	private String resoResourceName;
	private String resoNotes;
	private boolean resoActive;
	private Set<ResourceElements> resourceElementses = new HashSet<ResourceElements>(0);

	public Resources() {
	}

	public Resources(long resoId, ResourceTypes resourceTypes, String resoResourceName, boolean resoActive) {
		this.resoId = resoId;
		this.resourceTypes = resourceTypes;
		this.resoResourceName = resoResourceName;
		this.resoActive = resoActive;
	}

	public Resources(long resoId, ResourceTypes resourceTypes, String resoResourceName, String resoNotes, boolean resoActive, Set<ResourceElements> resourceElementses) {
		this.resoId = resoId;
		this.resourceTypes = resourceTypes;
		this.resoResourceName = resoResourceName;
		this.resoNotes = resoNotes;
		this.resoActive = resoActive;
		this.resourceElementses = resourceElementses;
	}

	@Id
	@IndexedEmbedded
	@Column(name = "reso_id", unique = true, nullable = false)
	public long getResoId() {
		return this.resoId;
	}

	public void setResoId(long resoId) {
		this.resoId = resoId;
	}
	
	@IndexedEmbedded
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reso_resource_type_id", nullable = false)
	public ResourceTypes getResourceTypes() {
		return this.resourceTypes;
	}

	public void setResourceTypes(ResourceTypes resourceTypes) {
		this.resourceTypes = resourceTypes;
	}
	
	@Fields(value = { 
			@Field(name="reso_resource_nameCS",index=Index.YES, analyze=Analyze.YES, analyzer = @Analyzer(definition="KeywordsSplitter"), store=Store.NO),
			@Field(name="reso_resource_nameNCS",index=Index.YES, analyze=Analyze.YES,analyzer = @Analyzer(definition="toLowerCase"), store=Store.NO)
	})
	@Column(name = "reso_resource_name", nullable = false, length = 500)
	public String getResoResourceName() {
		return this.resoResourceName;
	}

	public void setResoResourceName(String resoResourceName) {
		this.resoResourceName = resoResourceName;
	}
	
	@Fields(value = { 
			@Field(name="reso_notesCS",index=Index.YES, analyze=Analyze.YES, analyzer = @Analyzer(definition="KeywordsSplitter"), store=Store.NO),
			@Field(name="reso_notesNCS",index=Index.YES, analyze=Analyze.YES,analyzer = @Analyzer(definition="toLowerCase"), store=Store.NO)
	})
	@Column(name = "reso_notes", length = 500)
	public String getResoNotes() {
		return this.resoNotes;
	}

	public void setResoNotes(String resoNotes) {
		this.resoNotes = resoNotes;
	}
	
	@Field
	@Column(name = "reso_active", nullable = false)
	public boolean isResoActive() {
		return this.resoActive;
	}

	public void setResoActive(boolean resoActive) {
		this.resoActive = resoActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resources")
	public Set<ResourceElements> getResourceElementses() {
		return this.resourceElementses;
	}

	public void setResourceElementses(Set<ResourceElements> resourceElementses) {
		this.resourceElementses = resourceElementses;
	}

}
