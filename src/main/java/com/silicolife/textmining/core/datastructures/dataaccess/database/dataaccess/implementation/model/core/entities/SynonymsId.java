package com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities;

// Generated 23/Mar/2015 16:36:00 by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.Boost;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Fields;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

/**
 * SynonymsId generated by hbm2java
 */
@Embeddable
public class SynonymsId implements java.io.Serializable {

	private long synResourceElementId;
	private String synSynonym;
	private boolean synActive;

	public SynonymsId() {
	}

	public SynonymsId(long synResourceElementId, String synSynonym, boolean synActive) {
		this.synResourceElementId = synResourceElementId;
		this.synSynonym = synSynonym;
		this.synActive = synActive;
	}

	@Column(name = "syn_resource_element_id", nullable = false)
	public long getSynResourceElementId() {
		return this.synResourceElementId;
	}

	public void setSynResourceElementId(long synResourceElementId) {
		this.synResourceElementId = synResourceElementId;
	}

	@Fields( {
		@Field(index=Index.YES, analyze=Analyze.NO, store=Store.NO),
		@Field(name = "keywordEdgeNGram_syn_synonym", index = Index.YES, store = Store.NO,
		analyze = Analyze.YES, analyzer = @Analyzer(definition = "keywordEdgeAnalyzer"), boost = @Boost(2)),
		@Field(name = "tokenEdgeNGram_syn_synonym", index = Index.YES, store = Store.NO,
		analyze = Analyze.YES, analyzer = @Analyzer(definition = "tokenEdgeAnalyzer"))
	})
	@Column(name = "syn_synonym", nullable = false, length = 500)
	public String getSynSynonym() {
		return this.synSynonym;
	}

	public void setSynSynonym(String synSynonym) {
		this.synSynonym = synSynonym;
	}

	@Field(index=Index.YES, analyze=Analyze.NO, store=Store.NO)
	@Column(name = "syn_active", nullable = false)
	public boolean isSynActive() {
		return this.synActive;
	}

	public void setSynActive(boolean synActive) {
		this.synActive = synActive;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof SynonymsId))
			return false;
		SynonymsId castOther = (SynonymsId) other;

		return (this.getSynResourceElementId() == castOther.getSynResourceElementId())
				&& ((this.getSynSynonym() == castOther.getSynSynonym()) || (this.getSynSynonym() != null && castOther.getSynSynonym() != null && this.getSynSynonym().equals(
						castOther.getSynSynonym()))) && (this.isSynActive() == castOther.isSynActive());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (int) this.getSynResourceElementId();
		result = 37 * result + (getSynSynonym() == null ? 0 : this.getSynSynonym().hashCode());
		result = 37 * result + (this.isSynActive() ? 1 : 0);
		return result;
	}

}
